swagger: "2.0"
info:
  version: "0.0.1"
  title: LinkedBit
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:
    x-swagger-router-controller: Home
    get:
      description: Test
      operationId: home
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /post:
    x-swagger-router-controller: Post
    get:
      description: testing route post
      operationId: getPost
      parameters:
        - name: post
          in: query
          description: this is a test
          required: false
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /auth:
    x-swagger-router-controller: Auth
    get:
      description: testing route auth
      operationId: getAuth
      parameters:
        - name: auth
          in: query
          description: this is a test
          required: false
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: Users
    post:
      description: Add a new user
      operationId: postUsers
      parameters:
        - name: user
          in: body
          description: This query will get the user email and password.
          required: true
          schema:
            $ref: "#/definitions/NewUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /profile:
    x-swagger-router-controller: Profile
    get:
      description: testing route profile
      operationId: getProfile
      parameters:
        - name: profile
          in: query
          description: this is a test
          required: false
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  TestResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  NewUser:
    type: object
    properties:
      name:
        type: string
        description: Users Name.
      email:
        type: string
        description: Each user must be identified with a valid and unique email.
      password:
        type: string
        description: Personal user password.
    required:
      - name
      - email
      - password
